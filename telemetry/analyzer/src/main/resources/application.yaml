spring:
  application:
    name: analyzer

  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
  sql:
    init: always
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/postgres
    username: user
    password: 12345
    hikari:
      maximum-pool-size: 10

logging:
  level:
    ru.yandex.practicum.telemetry: TRACE
    org:
      hibernate.SQL: TRACE
      springframework: INFO

grpc:
  client:
    hub-router:
      address: 'static://localhost:59090'
      enableKeepAlive: true
      keepAliveWithoutCalls: true
      negotiationType: plaintext

analyzer:
  kafka:
    hub-consumer:
      properties:
        bootstrap.servers: localhost:9092
        key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value.deserializer: ru.yandex.practicum.kafka.serializer.HubEventDeserializer
        group.id: hub-group
    snapshot-consumer:
      properties:
        bootstrap.servers: localhost:9092
        key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value.deserializer: ru.yandex.practicum.kafka.serializer.SnapshotDeserializer
        group.id: snapshot-group

